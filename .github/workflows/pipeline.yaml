name: Deployment Pipeline

on:
  push:
    branches:
      - "main"
      - "develop"
      - "devops"

env:
  ENVIRONMENT_NAME: ${{ fromJSON('{"develop":"dev", "qa":"qa", "main":"prod"}')[github.head_ref || github.ref_name ] }}
  IMAGE_NAME: pablo_page

jobs:
  build-and-push: 
    runs-on: ubuntu-20.04

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9
      - run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
          
      - name: Display GitVersion variables (with prefix)
      - run: |
          echo "Major: ${{ env.GitVersion_Major }}"
          echo "Minor: ${{ env.GitVersion_Minor }}"
          echo "Patch: ${{ env.GitVersion_Patch }}"
          echo "PreReleaseTag: ${{ env.GitVersion_PreReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ env.GitVersion_PreReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ env.GitVersion_PreReleaseLabel }}"
          echo "PreReleaseNumber: ${{ env.GitVersion_PreReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ env.GitVersion_WeightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ env.GitVersion_BuildMetaData }}"
          echo "BuildMetaDataPadded: ${{ env.GitVersion_BuildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ env.GitVersion_FullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ env.GitVersion_MajorMinorPatch }}"
          echo "SemVer: ${{ env.GitVersion_SemVer }}"
          echo "LegacySemVer: ${{ env.GitVersion_LegacySemVer }}"
          echo "LegacySemVerPadded: ${{ env.GitVersion_LegacySemVerPadded }}"
          echo "AssemblySemVer: ${{ env.GitVersion_AssemblySemVer }}"
          echo "AssemblySemFileVer: ${{ env.GitVersion_AssemblySemFileVer }}"
          echo "FullSemVer: ${{ env.GitVersion_FullSemVer }}"
          echo "InformationalVersion: ${{ env.GitVersion_InformationalVersion }}"
          echo "BranchName: ${{ env.GitVersion_BranchName }}"
          echo "EscapedBranchName: ${{ env.GitVersion_EscapedBranchName }}"
          echo "Sha: ${{ env.GitVersion_Sha }}"
          echo "ShortSha: ${{ env.GitVersion_ShortSha }}"
          echo "NuGetVersionV2: ${{ env.GitVersion_NuGetVersionV2 }}"
          echo "NuGetVersion: ${{ env.GitVersion_NuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ env.GitVersion_NuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ env.GitVersion_NuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ env.GitVersion_VersionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ env.GitVersion_CommitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ env.GitVersion_CommitsSinceVersionSourcePadded }}"
          echo "UncommittedChanges: ${{ env.GitVersion_UncommittedChanges }}"
          echo "CommitDate: ${{ env.GitVersion_CommitDate }}"
          
      - name: Lint Action
        uses: wearerequired/lint-action@v2.0.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push
        uses: docker/build-push-action@v3
        with:
          file: dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest, 
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.gitversion.outputs.semVer }}
          contex: .
